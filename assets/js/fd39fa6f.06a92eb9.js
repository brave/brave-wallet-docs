"use strict";(self.webpackChunkbrave_wallet_docs=self.webpackChunkbrave_wallet_docs||[]).push([[582],{6820:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"ethereum/wallet-detection","title":"Brave Wallet detection","description":"We recommend that Dapps use a Brave Wallet button and that they treat Brave Wallet like MetaMask.","source":"@site/docs/ethereum/wallet-detection.md","sourceDirName":"ethereum","slug":"/ethereum/wallet-detection","permalink":"/ethereum/wallet-detection","draft":false,"unlisted":false,"editUrl":"https://github.com/brave/brave-wallet-docs/edit/main/docs/ethereum/wallet-detection.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Custom chains","permalink":"/ethereum/custom-chains"},"next":{"title":"Local development environment","permalink":"/ethereum/use-cases/local-development-environment"}}');var a=n(4848),l=n(8453);const r={sidebar_position:4},o="Brave Wallet detection",s={},c=[{value:"Compatibility with MetaMask",id:"compatibility-with-metamask",level:2},{value:"Brave Wallet Provider injection &amp; detection via library",id:"brave-wallet-provider-injection--detection-via-library",level:2},{value:"Synchronous detection",id:"synchronous-detection",level:2},{value:"Asynchronous detection using <code>web3_clientVersion</code>",id:"asynchronous-detection-using-web3_clientversion",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"brave-wallet-detection",children:"Brave Wallet detection"})}),"\n",(0,a.jsx)(t.p,{children:"We recommend that Dapps use a Brave Wallet button and that they treat Brave Wallet like MetaMask."}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://github.com/Web3Modal/web3modal",children:"Web3Modal"})," is a useful library for handling this for you."]}),"\n",(0,a.jsx)(t.h2,{id:"compatibility-with-metamask",children:"Compatibility with MetaMask"}),"\n",(0,a.jsxs)(t.p,{children:["Since Brave Wallet aims to be compatible with MetaMask's exposed API, we set ",(0,a.jsx)(t.code,{children:"window.ethereum.isMetaMask"})," to ",(0,a.jsx)(t.code,{children:"true"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"brave-wallet-provider-injection--detection-via-library",children:"Brave Wallet Provider injection & detection via library"}),"\n",(0,a.jsx)(t.p,{children:"Check out these open-source libraries for off-the-shelf solutions"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://github.com/Web3Modal/web3modal",children:"Web3Modal"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://github.com/blocknative/web3-onboard",children:"Web3-Onboard"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://github.com/tmm/wagmi",children:"wagmi"})}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"synchronous-detection",children:"Synchronous detection"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"const isBraveWallet = window.ethereum.isBraveWallet\nconsole.log('Brave Wallet: ', isBraveWallet)\n"})}),"\n",(0,a.jsxs)(t.h2,{id:"asynchronous-detection-using-web3_clientversion",children:["Asynchronous detection using ",(0,a.jsx)(t.code,{children:"web3_clientVersion"})]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"const isBraveWallet = await window.ethereum.request({\n    method: 'web3_clientVersion'\n  }).then((clientVersion) => {\n    return clientVersion.split('/')[0] === 'BraveWallet'\n  })\nconsole.log('Brave Wallet: ', isBraveWallet)\n"})}),"\n",(0,a.jsx)(t.p,{children:"Or:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"const isBraveWallet = await window.ethereum.request({\n    method: 'web3_clientVersion'\n  }).then((clientVersion) => {\n    return window.ethereum.isMetaMask && clientVersion.split('/')[0] !== 'MetaMask'\n  })\nconsole.log('Brave Wallet: ', isBraveWallet)\n"})})]})}function h(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var i=n(6540);const a={},l=i.createContext(a);function r(e){const t=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(l.Provider,{value:t},e.children)}}}]);